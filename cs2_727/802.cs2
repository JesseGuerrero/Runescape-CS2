//script802(802)(int arg0, int arg1, int arg2, int arg3, string arg4)(int, string)
int iVar4
int iVar5
int iVar6
int iVar7
string sVar0
string sVar1
iVar4 = string_length(arg0)
if(arg0 <= -1)
	arg0 = iVar4
else
	arg0 = min(iVar4, arg0)
sVar0 = ""
if(arg0 > 0)
	sVar0 = substring(arg0, arg0, 0)
sVar1 = ""
if(arg0 < iVar4)
	sVar1 = substring(arg0, iVar4, arg0)
iVar5 = 0
iVar6 = 0
iVar7 = 0
if(arg2 == 85) {
	iVar5 = string_length(sVar0)
	if(iVar5 > 1)
		sVar0 = substring(sVar0, iVar5 - 1, 0)
	else {
		sVar0 = ""
		iVar7 = 1
	}
	arg0 = append(sVar1, sVar0)
	arg0 = max(0, arg0 - 1)
} else 
	if(arg2 == 101) {
		iVar5 = string_length(sVar1)
		if(iVar5 > 1)
			sVar1 = substring(sVar1, iVar5, 1)
		else {
			sVar1 = ""
			iVar7 = 1
		}
		arg0 = append(sVar1, sVar0)
	} else 
		if(char_isprintable(arg3) == 1)
			switch(arg1) {
				case default:
					break
				case 0:
					if(load_varc(1650) == 1)
						iVar6 = 255
					else
						iVar6 = 80
					if(iVar4 < iVar6) {
						arg0 = append(sVar1, append_char(sVar0, arg3))
						arg0 = arg0 + 1
					} else 
						iVar7 = 1
					break
				case 1:
					if(char_isnumeric(arg3) == 1)
						if(iVar4 < 10) {
							arg0 = append(sVar1, append_char(sVar0, arg3))
							arg0 = arg0 + 1
						} else 
							iVar7 = 1
					break
				case 2:
					if(iVar4 < 12) {
						arg0 = append(sVar1, append_char(sVar0, arg3))
						arg0 = arg0 + 1
					} else 
						iVar7 = 1
					break
				case 3:
					if(iVar4 < 320) {
						arg0 = append(sVar1, append_char(sVar0, arg3))
						arg0 = arg0 + 1
					} else 
						iVar7 = 1
					break
				case 4:
					if(char_isalphanumeric(arg3) == 1 || string_indexof_char(" '&,.!-àÀáÁâÂãÃäÄåÅçÇèÈéÉêÊëËìÌíÍîÎïÏñÑòÒóÓôÔõÕöÖùÙúÚûÛüÜýÝÿ", 0, arg3) != -1)
						if(iVar4 < 50) {
							arg0 = append(sVar1, append_char(sVar0, arg3))
							arg0 = arg0 + 1
						} else 
							iVar7 = 1
					break
				case 5:
					if(iVar4 < 50) {
						arg0 = append(sVar1, append_char(sVar0, arg3))
						arg0 = arg0 + 1
					} else 
						iVar7 = 1
					break
				case 6:
					switch(world_language()) {
						case default:
							break
						case 1:
							if(char_isnumeric(arg3) == 1 || string_indexof_char("KkMmTt", 0, arg3) != -1 || iVar4 > 0)
								if(iVar4 < 10)
									if(string_indexof_string("K", arg0, 0) == -1)
										if(string_indexof_string("k", arg0, 0) == -1)
											if(string_indexof_string("M", arg0, 0) == -1)
												if(string_indexof_string("m", arg0, 0) == -1)
													if(string_indexof_string("T", arg0, 0) == -1)
														if(string_indexof_string("t", arg0, 0) == -1) {
															arg0 = append(sVar1, append_char(sVar0, arg3))
															arg0 = arg0 + 1
														} else 
															iVar7 = 1
								else
									iVar7 = 1
							break

					}
					if(char_isnumeric(arg3) == 1 || string_indexof_char("KkMm", 0, arg3) != -1 || iVar4 > 0)
						if(iVar4 < 10)
							if(string_indexof_string("K", arg0, 0) == -1)
								if(string_indexof_string("k", arg0, 0) == -1)
									if(string_indexof_string("M", arg0, 0) == -1)
										if(string_indexof_string("m", arg0, 0) == -1) {
											arg0 = append(sVar1, append_char(sVar0, arg3))
											arg0 = arg0 + 1
										} else 
											iVar7 = 1
						else
							iVar7 = 1
					break
				case 7:
					if(iVar4 < 30) {
						arg0 = append(sVar1, append_char(sVar0, arg3))
						arg0 = arg0 + 1
					} else 
						iVar7 = 1
					break

			}
return arg0, arg0
return 0, ""
